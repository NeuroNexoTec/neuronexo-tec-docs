{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenidos a la Comunidad NeuroNexoTec Ingenier\u00eda y Open Source","text":"<p>En un mundo en el que la tecnolog\u00eda avanza a pasos agigantados, creemos que la colaboraci\u00f3n, la transparencia y el conocimiento compartido son los pilares fundamentales para construir un ecosistema tecnol\u00f3gico m\u00e1s fuerte y sostenible.</p> <p>Nuestra comunidad nace con un prop\u00f3sito claro: definir y promover las mejores pr\u00e1cticas de ingenier\u00eda en TI, creando una referencia abierta y accesible para cualquier organizaci\u00f3n que quiera construir tecnolog\u00eda de calidad.</p>"},{"location":"#que-hacemos","title":"\ud83d\ude80 \u00bfQu\u00e9 hacemos?","text":"<ul> <li>Dise\u00f1amos est\u00e1ndares y pol\u00edticas t\u00e9cnicas que pueden ser adoptados por empresas de todos los tama\u00f1os.</li> <li>Desarrollamos herramientas open source pensadas para entornos productivos reales.</li> <li>Documentamos buenas pr\u00e1cticas en desarrollo, infraestructura, seguridad y operaci\u00f3n.</li> <li>Creamos comunidad, compartiendo experiencia, conocimiento y visi\u00f3n de futuro.</li> </ul>"},{"location":"#nuestro-objetivo","title":"\ud83c\udfaf Nuestro objetivo","text":"<p>Queremos ser un punto de encuentro para profesionales, empresas y entusiastas que buscan algo m\u00e1s que soluciones r\u00e1pidas. Buscamos establecer una nueva forma de hacer ingenier\u00eda en M\u00e9xico y Latinoam\u00e9rica, m\u00e1s ordenada, m\u00e1s segura y, sobre todo, m\u00e1s colaborativa.</p> <p>Esta documentaci\u00f3n es el coraz\u00f3n vivo de nuestra comunidad. Aqu\u00ed encontrar\u00e1s nuestras pol\u00edticas, gu\u00edas, principios y todo lo que necesitas para adoptar o contribuir a este movimiento.</p> <p>Bienvenido. Aqu\u00ed empieza el cambio.</p> <p>\u2709\ufe0f \u00bfTienes una idea, una pr\u00e1ctica que te ha funcionado o quieres ayudar a otros equipos? Nos encantar\u00eda contar contigo. Revisa nuestra Gu\u00eda de Contribuci\u00f3n y s\u00e9 parte del futuro del software abierto en M\u00e9xico.</p>"},{"location":"comunidad/codigo-conducta/","title":"Codigo de conducta","text":""},{"location":"comunidad/como-participar/","title":"Como puedes participar","text":""},{"location":"comunidad/introduccion/","title":"La comunidad hispana de Ingenieria y Open Source","text":""},{"location":"comunidad/mision/","title":"Nuestra mision","text":""},{"location":"comunidad/nosotros/","title":"Quienes somos","text":""},{"location":"comunidad/nosotros/#nuestro-proposito","title":"Nuestro prop\u00f3sito","text":"<p>Crear herramientas de software libre que impulsen la estandarizaci\u00f3n, eficiencia y transparencia de los departamentos de TI en empresas mexicanas, especialmente PYMEs, fortaleciendo su capacidad tecnol\u00f3gica sin comprometer su autonom\u00eda.</p>"},{"location":"comunidad/nosotros/#nuestra-vision","title":"Nuestra Visi\u00f3n","text":"<p>Ser la comunidad referente en M\u00e9xico por sus soluciones de TI open source, accesibles, robustas y enfocadas en las necesidades reales del entorno empresarial nacional.</p>"},{"location":"comunidad/nosotros/#mision","title":"Misi\u00f3n","text":"<p>Reunir desarrolladores, especialistas en TI y aliados estrat\u00e9gicos para colaborar en el dise\u00f1o, documentaci\u00f3n y mantenimiento de software libre que resuelva problemas comunes en la gesti\u00f3n tecnol\u00f3gica de las empresas mexicanas.</p>"},{"location":"comunidad/principios/","title":"Nuestros principios","text":""},{"location":"comunidad/vision/","title":"Nuestra vision","text":""},{"location":"cursos/analisis-datos/inicio/","title":"Analisis de datos","text":"<p>\ud83e\udded Temario para Curso de Formaci\u00f3n de Analistas de Datos \u2013 Enfoque Scrum \ud83e\uddf1 Fundamentos estructurales Duraci\u00f3n sugerida: 8 semanas (8 Sprints de 1 semana)</p> <p>Modalidad: Aprendizaje basado en proyectos y tareas (Scrum)</p> <p>Herramientas: Jira, GitHub, Jupyter, DBeaver/pgAdmin, Power BI, Grafana</p> <p>\ud83e\udde9 SPRINT 0 \u2013 Onboarding \u00c1gil Objetivo: Introducci\u00f3n al entorno, herramientas y estructura de trabajo Scrum.</p> <p>Temas: \u00bfQu\u00e9 es Scrum y c\u00f3mo lo aplicaremos?</p> <p>Roles y ceremonias</p> <p>Jira: backlog, board, tareas, historias</p> <p>Git + GitHub: configuraci\u00f3n inicial</p> <p>Entorno de trabajo con Python y Jupyter</p> <p>Instalaci\u00f3n de PostgreSQL o SQLite</p> <p>Registro en Power BI y Grafana</p> <p>Actividades:  Crear cuenta en Jira y GitHub</p> <p>Subir primer commit (README.md del curso)</p> <p>Configurar entorno de desarrollo</p> <p>Crear primer tablero en Jira con historias b\u00e1sicas del Sprint 1</p> <p>\ud83e\udde9 SPRINT 1 \u2013 Primer contacto con datos Temas: Python: tipos de datos, estructuras b\u00e1sicas</p> <p>SQL: SELECT, WHERE, LIMIT</p> <p>Git: git init, add, commit</p> <p>Power BI: conexi\u00f3n a Excel o CSV</p> <p>Jira: estimaci\u00f3n de tareas y Daily Standup</p> <p>Actividades:  Leer archivo CSV con pandas y contar registros</p> <p>Realizar consultas b\u00e1sicas en SQL (SELECT + WHERE)</p> <p>Crear gr\u00e1fico simple en Power BI (ventas por regi\u00f3n)</p> <p>Crear rama en Git y subir los primeros notebooks</p> <p>Documentar todo en una historia de usuario Jira</p> <p>Investigaci\u00f3n: \u00bfQu\u00e9 hace un analista de datos en la vida real?</p> <p>\ud83e\udde9 SPRINT 2 \u2013 Primer an\u00e1lisis exploratorio Temas: Python: funciones, condicionales, loops</p> <p>SQL: GROUP BY, funciones agregadas (SUM, AVG)</p> <p>Git: trabajar con branches</p> <p>Power BI: filtros y segmentaciones</p> <p>Jira: refinamiento de historias</p> <p>Actividades:  Calcular KPIs con Python: promedio, suma, m\u00e1ximos</p> <p>Consultar KPIs con SQL (ventas por mes)</p> <p>A\u00f1adir visual din\u00e1mico en Power BI</p> <p>Hacer un merge en Git con revisi\u00f3n de c\u00f3digo</p> <p>Crear sub-tareas en Jira para dividir el an\u00e1lisis</p> <p>Investigaci\u00f3n: \u00bfQu\u00e9 es un ETL y c\u00f3mo se usa?</p> <p>\ud83e\udde9 SPRINT 3 \u2013 Profundizando en modelado Temas: Python: limpieza de datos con pandas</p> <p>SQL: JOINS entre tablas</p> <p>Git: conflicto de merge</p> <p>Power BI: modelado y relaciones entre tablas</p> <p>Jira: planificaci\u00f3n de Sprint y Review</p> <p>Actividades:  Eliminar nulos, duplicados y outliers en pandas</p> <p>Hacer INNER JOIN entre ventas y productos en SQL</p> <p>Resolver un conflicto de merge en Git</p> <p>Crear modelo de datos en Power BI con relaciones</p> <p>Hacer demo de lo aprendido como Sprint Review</p> <p>Investigaci\u00f3n: \u00bfPor qu\u00e9 los datos deben limpiarse antes del an\u00e1lisis?</p> <p>\ud83e\udde9 SPRINT 4 \u2013 M\u00e9tricas, tiempo y rendimiento Temas: Python: agrupaciones, transformaciones, estad\u00edsticas</p> <p>SQL: funciones de fecha y operaciones con tiempo</p> <p>Git: documentaci\u00f3n con README.md</p> <p>Power BI: DAX b\u00e1sico para KPIs</p> <p>Grafana: primer dashboard con fuente SQL</p> <p>Actividades:  Agrupar ventas por mes y calcular crecimiento % en pandas</p> <p>Crear columna con YEAR y MONTH en SQL</p> <p>Agregar medida DAX: ventas acumuladas</p> <p>Subir documentaci\u00f3n clara al repo</p> <p>Crear panel inicial en Grafana con una tabla simple</p> <p>Investigaci\u00f3n: Diferencias entre Power BI y Grafana: \u00bfcu\u00e1ndo usar cada uno?</p> <p>\ud83e\udde9 SPRINT 5 \u2013 Escenarios y control de versiones Temas: Python: manejo de errores, funciones lambda</p> <p>SQL: subconsultas y views</p> <p>Git: git stash, reset, revert</p> <p>Power BI: bookmarks y navegaci\u00f3n de informes</p> <p>Jira: historias t\u00e9cnicas vs funcionales</p> <p>Actividades:  Crear funciones propias para limpieza de datos</p> <p>Crear una view con KPIs agregados por producto</p> <p>Simular error en Git y solucionarlo con revert</p> <p>Crear presentaci\u00f3n navegable en Power BI</p> <p>Crear tareas t\u00e9cnicas separadas de las de negocio</p> <p>Investigaci\u00f3n: \u00bfQu\u00e9 tipos de errores comunes se encuentran en pipelines de datos?</p> <p>\ud83e\udde9 SPRINT 6 \u2013 Visualizaciones avanzadas Temas: Python: visualizaci\u00f3n con matplotlib y seaborn</p> <p>SQL: optimizaci\u00f3n de consultas</p> <p>Git: workflows colaborativos</p> <p>Power BI: visuales personalizados y condicionales</p> <p>Grafana: paneles de series temporales</p> <p>Actividades:  Graficar correlaci\u00f3n entre variables con seaborn</p> <p>Optimizar una query con \u00edndices o simplificaciones</p> <p>Revisar y hacer Pull Request al repo de un compa\u00f1ero</p> <p>Agregar alertas en panel de Grafana</p> <p>Preparar retrospectiva del Sprint</p> <p>Investigaci\u00f3n: \u00bfC\u00f3mo afecta una mala visualizaci\u00f3n a las decisiones del negocio?</p> <p>\ud83e\udde9 SPRINT 7 \u2013 Proyecto Final Objetivo: Aplicar todo lo aprendido en un proyecto completo, individual o en equipo.</p> <p>Actividades:  Crear backlog en Jira con todas las historias del proyecto</p> <p>Cargar y limpiar datos con Python</p> <p>Crear modelo SQL relacional y consultas clave</p> <p>Subir todo el c\u00f3digo a GitHub con control de versiones</p> <p>Construir un dashboard en Power BI y otro en Grafana</p> <p>Presentaci\u00f3n final estilo \u201cdemo para stakeholders\u201d</p> <p>\ud83d\udcd8 Resumen de entregables por participante: Repositorio Git con todo el c\u00f3digo</p> <p>Tablero Jira con tareas organizadas por Sprint</p> <p>Proyecto final completo</p> <p>Cuaderno de investigaciones (Markdown o PDF)</p>"},{"location":"desarrollo/buenas-practicas/","title":"Guia de buenas practicas en el desarrollo de software","text":""},{"location":"desarrollo/exception-handler/","title":"Manejador de excepciones","text":""},{"location":"desarrollo/proceso/","title":"Proceso de desarrollo","text":""},{"location":"desarrollo/code-review/introduccion/","title":"Guia de introduccion al proceo estandar de Code Review","text":""},{"location":"desarrollo/error-handler/capas/","title":"Capas de implementacion","text":"<p>Implementar un sistema robusto y confiable no depende \u00fanicamente de escribir funciones que \u201chagan lo que deben\u201d, sino de anticipar lo que puede salir mal, identificarlo con precisi\u00f3n, gestionarlo con criterio y comunicarlo con claridad. Esta responsabilidad se distribuye a lo largo de distintas capas del sistema, cada una con un rol espec\u00edfico en el tratamiento de los errores.</p> <p>El est\u00e1ndar de manejo de errores se construye sobre cinco capas fundamentales: infraestructura, dominio, aplicaci\u00f3n, presentaci\u00f3n y observabilidad. Comprender la funci\u00f3n y los escenarios caracter\u00edsticos de cada una de ellas es esencial para desarrollar software profesional, mantenible y resiliente. A continuaci\u00f3n, se describen estas capas en profundidad, junto con ejemplos claros para facilitar su comprensi\u00f3n.</p>"},{"location":"desarrollo/error-handler/capas/#capa-de-infraestructura","title":"Capa de Infraestructura","text":"<p>La capa de infraestructura constituye el cimiento t\u00e9cnico sobre el cual se apoya un sistema. Es la capa encargada de interactuar con el \"mundo exterior\" al software: bases de datos, redes, archivos, servicios de terceros, almacenamiento en la nube, colas de mensajes, proveedores de autenticaci\u00f3n, entre muchos otros recursos. Aunque no contiene l\u00f3gica de negocio, su correcta operaci\u00f3n es esencial para que el sistema funcione.</p> <p>En el contexto de un est\u00e1ndar de manejo de errores, la capa de infraestructura representa el punto inicial donde los errores t\u00e9cnicos pueden originarse. Por ello, debe estar preparada para identificar, encapsular y propagar de manera estandarizada cualquier error que surja en su interacci\u00f3n con sistemas externos o recursos f\u00edsicos.</p>"},{"location":"desarrollo/error-handler/capas/#caracteristicas-de-la-capa-de-infraestructura","title":"Caracter\u00edsticas de la Capa de Infraestructura","text":"<ul> <li>Intermediaria t\u00e9cnica: No define reglas de negocio, sino que se limita a cumplir requerimientos t\u00e9cnicos solicitados por capas superiores.</li> <li>Vol\u00e1til por naturaleza: Depende de elementos externos que pueden fallar (latencia de red, disponibilidad de servicios, errores en discos, etc.).</li> <li>No toma decisiones: Informa a la capa de aplicaci\u00f3n o dominio, pero no define c\u00f3mo se debe reaccionar ante un error.</li> <li>Abstra\u00edda del consumidor: Los errores que detecta deben ser encapsulados de forma que no expongan detalles irrelevantes a otras capas o al usuario final.</li> </ul>"},{"location":"desarrollo/error-handler/capas/#escenarios-comunes","title":"Escenarios comunes","text":"<p>Errores de Conexi\u00f3n a Base de Datos</p> <p>Escenario: El sistema intenta conectarse a una base de datos SQL, pero el servidor no responde. Puede ser por red, saturaci\u00f3n del servicio o configuraci\u00f3n incorrecta.</p> <p>C\u00f3mo identificarlo: El sistema lanza una excepci\u00f3n de tiempo de espera o conexi\u00f3n rechazada. El error ocurre incluso antes de ejecutar una consulta.</p> <p>Ejemplo pr\u00e1ctico: Al iniciar la aplicaci\u00f3n, falla la validaci\u00f3n de conexi\u00f3n con el mensaje: \u201cDatabase unreachable\u201d.</p> <p>Errores en Lectura/Escritura de Archivos</p> <p>Escenario: Se intenta guardar un archivo en un sistema de archivos y no hay espacio disponible, o la ruta no existe.</p> <p>C\u00f3mo identificarlo: El sistema devuelve un error de tipo \"permission denied\", \u201cdisk full\u201d o \u201cpath not found\u201d.</p> <p>Ejemplo pr\u00e1ctico: Una funci\u00f3n de respaldo intenta copiar un archivo de log y falla porque se cambi\u00f3 el volumen de almacenamiento.</p> <p>Fallas en Servicios Externos (APIs de terceros)</p> <p>Escenario: Se hace una llamada a una API externa y esta responde con un c\u00f3digo 500, un 429 (too many requests) o directamente no responde.</p> <p>C\u00f3mo identificarlo: El sistema recibe errores HTTP, mensajes de \u201cbad gateway\u201d o tiempos de espera.</p> <p>Ejemplo pr\u00e1ctico: El sistema intenta validar una tarjeta de cr\u00e9dito con un proveedor de pagos, pero la API responde con \"internal server error\".</p> <p>Errores en Colas de Mensajes</p> <p>Escenario: El sistema intenta publicar o consumir un mensaje de una cola (como RabbitMQ, Kafka o SQS), pero hay problemas de conexi\u00f3n o desincronizaci\u00f3n.</p> <p>C\u00f3mo identificarlo: Se observan errores como \u201cbroker not available\u201d, \u201cqueue not found\u201d o p\u00e9rdida de confirmaci\u00f3n.</p> <p>Ejemplo pr\u00e1ctico: Se intenta publicar una notificaci\u00f3n a una cola, pero el mensaje no es aceptado por una pol\u00edtica de tama\u00f1o m\u00e1ximo superado.</p> <p>Problemas en Sistemas de Cache (Redis, Memcached)</p> <p>Escenario: Al consultar el cache para obtener una sesi\u00f3n de usuario, Redis est\u00e1 ca\u00eddo o responde con errores.</p> <p>C\u00f3mo identificarlo: El sistema lanza un error por socket cerrado, comando no reconocido, o timeout.</p> <p>Ejemplo pr\u00e1ctico: La aplicaci\u00f3n pierde la sesi\u00f3n del usuario y lo fuerza a autenticarse nuevamente debido a una falla silenciosa en Redis.</p> <p>Errores de Autenticaci\u00f3n Externa</p> <p>Escenario: El sistema necesita autenticarse contra un sistema federado (LDAP, OAuth, OpenID Connect), pero las credenciales fallan o el proveedor no est\u00e1 disponible.</p> <p>C\u00f3mo identificarlo: El sistema recibe errores de \u201caccess denied\u201d, \u201cinvalid credentials\u201d o c\u00f3digos HTTP como 401 o 403.</p> <p>Ejemplo pr\u00e1ctico: Un usuario intenta ingresar con autenticaci\u00f3n corporativa, pero el servidor LDAP est\u00e1 fuera de servicio.</p> <p>Errores de Configuraci\u00f3n y Variables de Entorno</p> <p>Escenario: La infraestructura requiere ciertas configuraciones en variables de entorno o archivos de configuraci\u00f3n, pero estos est\u00e1n mal definidos.</p> <p>C\u00f3mo identificarlo: Al iniciar la aplicaci\u00f3n, se detectan errores como \"missing configuration\" o valores inv\u00e1lidos para par\u00e1metros cr\u00edticos.</p> <p>Ejemplo pr\u00e1ctico: La URL de la base de datos contiene un error tipogr\u00e1fico que hace fallar toda la cadena de conexi\u00f3n.</p>"},{"location":"desarrollo/error-handler/capas/#rol-en-el-manejo-de-errores","title":"Rol en el manejo de errores","text":"<p>En estos casos, los errores no reflejan una falla l\u00f3gica del sistema, sino una condici\u00f3n t\u00e9cnica inesperada. La capa de infraestructura debe detectar estas condiciones, encapsular la informaci\u00f3n t\u00e9cnica relevante, y trasladarla al resto del sistema mediante un mecanismo uniforme. No debe tomar decisiones de negocio, sino informar con precisi\u00f3n que algo t\u00e9cnico fall\u00f3.</p> <ol> <li>Capa de Dominio Descripci\u00f3n La capa de dominio representa el conocimiento profundo del problema que el sistema busca resolver. Aqu\u00ed se define lo que es v\u00e1lido o inv\u00e1lido dentro del contexto del negocio, sin importar los aspectos t\u00e9cnicos del sistema.</li> </ol> <p>Escenarios comunes Se intenta aprobar un pr\u00e9stamo sin que el cliente tenga los requisitos m\u00ednimos establecidos por la pol\u00edtica de cr\u00e9dito.</p> <p>Se crea una orden de compra con un producto que ya no est\u00e1 disponible en el cat\u00e1logo.</p> <p>Se intenta registrar a un usuario con una direcci\u00f3n de correo que ya est\u00e1 asociada a otra cuenta.</p> <p>Rol en el manejo de errores Los errores de esta capa son violaciones de reglas del negocio. No ocurren por fallos t\u00e9cnicos, sino porque una operaci\u00f3n solicitada no cumple con las condiciones l\u00f3gicas necesarias para ejecutarse. Aqu\u00ed es fundamental que los errores sean expl\u00edcitos, entendibles y categorizados seg\u00fan el tipo de infracci\u00f3n, para que el resto del sistema pueda actuar en consecuencia (por ejemplo, notificando al usuario o impidiendo una acci\u00f3n posterior).</p> <ol> <li>Capa de Aplicaci\u00f3n Descripci\u00f3n La capa de aplicaci\u00f3n orquesta los diferentes casos de uso del sistema. Act\u00faa como un puente entre los requerimientos externos (como una solicitud del usuario) y las reglas internas del negocio. Tambi\u00e9n se encarga de coordinar interacciones entre distintas partes del sistema.</li> </ol> <p>Escenarios comunes Una solicitud de registro llega al sistema: se validan los datos, se consulta la base de datos, se aplican las reglas de negocio y finalmente se registra al usuario.</p> <p>Se ejecuta un proceso de facturaci\u00f3n autom\u00e1tica que implica recuperar datos, calcular montos, y enviar los comprobantes por correo electr\u00f3nico.</p> <p>Se programa una tarea recurrente que extrae informaci\u00f3n de distintas fuentes, la consolida y la archiva.</p> <p>Rol en el manejo de errores En esta capa, el sistema debe gestionar los errores detectados por otras capas. Su responsabilidad es decidir qu\u00e9 hacer: repetir un intento, ignorar la operaci\u00f3n, emitir una alerta, o registrar una acci\u00f3n de compensaci\u00f3n. La capa de aplicaci\u00f3n no genera errores nuevos, sino que toma decisiones con base en los errores ya detectados.</p> <p>Por ejemplo, si un intento de guardar datos falla por una interrupci\u00f3n temporal, la capa de aplicaci\u00f3n puede reintentar la operaci\u00f3n autom\u00e1ticamente. Si un error de dominio se\u00f1ala una violaci\u00f3n de pol\u00edtica de negocio, esta capa puede abortar el flujo actual y retornar una respuesta clara.</p> <ol> <li>Capa de Presentaci\u00f3n Descripci\u00f3n La capa de presentaci\u00f3n es la interfaz que permite al usuario (humano o sistema externo) interactuar con el software. Puede adoptar diversas formas: una aplicaci\u00f3n web, una API, una aplicaci\u00f3n m\u00f3vil, un asistente virtual o un panel administrativo.</li> </ol> <p>Escenarios comunes Un usuario intenta registrarse desde una aplicaci\u00f3n m\u00f3vil.</p> <p>Un sistema externo hace una solicitud HTTP para consultar el estado de un pedido.</p> <p>Un operador utiliza una interfaz administrativa para actualizar los datos de un cliente.</p> <p>Rol en el manejo de errores Esta capa tiene como tarea principal traducir los errores internos en respuestas adecuadas para el consumidor del sistema. Debe comunicar lo necesario y ocultar lo irrelevante. Un error t\u00e9cnico o del dominio debe convertirse aqu\u00ed en un mensaje claro, comprensible y \u00fatil.</p> <p>Por ejemplo:</p> <p>Si un dato est\u00e1 mal ingresado, la presentaci\u00f3n debe se\u00f1alarlo claramente sin exponer c\u00f3mo se valid\u00f3.</p> <p>Si ocurre un error interno, el sistema puede informar que hubo un problema temporal, sin detallar aspectos t\u00e9cnicos como fallas de red o errores en bases de datos.</p> <p>Adem\u00e1s, la presentaci\u00f3n debe categorizar los errores correctamente para que los consumidores del sistema puedan reaccionar de forma autom\u00e1tica si es necesario.</p> <ol> <li>Capa de Observabilidad Descripci\u00f3n La capa de observabilidad es transversal y se ocupa de monitorear el comportamiento del sistema, recolectar informaci\u00f3n y detectar patrones. Es esencial para la estabilidad y evoluci\u00f3n del software, aunque no participe directamente en la ejecuci\u00f3n de flujos de negocio.</li> </ol> <p>Escenarios comunes Un error repetido en la capa de infraestructura sugiere que un proveedor externo no est\u00e1 respondiendo correctamente.</p> <p>Varias fallas de validaci\u00f3n de datos indican que el formulario de registro es confuso para los usuarios.</p> <p>Un n\u00famero inusual de errores internos en horas pico sugiere problemas de escalabilidad.</p> <p>Rol en el manejo de errores En esta capa se registran y analizan los errores, no se resuelven ni se presentan al usuario. Su prop\u00f3sito es permitir a los equipos t\u00e9cnicos identificar causas ra\u00edz, correlacionar eventos y tomar decisiones preventivas. Es el punto de conexi\u00f3n entre los errores en tiempo de ejecuci\u00f3n y las acciones correctivas o evolutivas que se tomar\u00e1n fuera del sistema.</p>"},{"location":"desarrollo/error-handler/clasificacion-errores/","title":"Clasigicacion de errores","text":""},{"location":"desarrollo/error-handler/clasificacion-errores/#errores-de-infraestructura","title":"Errores de infraestructura","text":"<p><code>ERR-INF-001</code> \u2013 Connection Refused</p> <p>Descripci\u00f3n: La conexi\u00f3n a un host/puerto remoto fue rechazada porque no hay servicio escuchando o el acceso fue bloqueado por firewall o pol\u00edtica de red.</p> <p>S\u00edntomas: </p> <ul> <li>Mensaje de error del tipo ECONNREFUSED.</li> </ul> <p>Identificaci\u00f3n: Logs de cliente de red, error inmediato al intentar conexi\u00f3n.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-002</code> \u2013 Host Unreachable</p> <p>Descripci\u00f3n: No se puede alcanzar el host remoto. Puede deberse a que el host est\u00e1 fuera de l\u00ednea o la red no tiene ruta.</p> <p>S\u00edntomas: </p> <ul> <li>No route to host</li> <li>Destination unreachable.</li> </ul> <p>Identificaci\u00f3n: Ping fallido, traceroute incompleto.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-003</code> \u2013 Timeout de Conexi\u00f3n</p> <p>Descripci\u00f3n: El cliente no pudo conectarse al servicio remoto dentro del tiempo permitido.</p> <p>S\u00edntomas: </p> <ul> <li>Connect ETIMEDOUT </li> <li>Socket timeout.</li> </ul> <p>Identificaci\u00f3n: Se observa demora y posterior error en la petici\u00f3n.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-004</code> \u2013 DNS Resolution Failed</p> <p>Descripci\u00f3n: Fallo al resolver un nombre de dominio a una direcci\u00f3n IP.</p> <p>S\u00edntomas: </p> <ul> <li>ENOTFOUND</li> <li>DNS_PROBE_FINISHED_NXDOMAIN.</li> </ul> <p>Identificaci\u00f3n: Verificaci\u00f3n mediante dig, nslookup.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-005</code> \u2013 Conexi\u00f3n Cerrada Prematuramente</p> <p>Descripci\u00f3n: La conexi\u00f3n fue cerrada por el servidor antes de que se completara la comunicaci\u00f3n.</p> <p>S\u00edntomas: </p> <ul> <li>Connection reset by peer</li> <li>Broken pipe.</li> </ul> <p>Identificaci\u00f3n: Se produce durante transferencia activa.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-006</code> \u2013 No Space Left on Device</p> <p>Descripci\u00f3n: El sistema de archivos se ha quedado sin espacio.</p> <p>S\u00edntomas: </p> <ul> <li>ENOSPC </li> <li>Disk quota exceeded.</li> </ul> <p>Identificaci\u00f3n: Comando df -h o equivalente.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-007</code> \u2013 Permission Denied</p> <p>Descripci\u00f3n: Permiso insuficiente para acceder, crear o modificar un archivo o directorio.</p> <p>S\u00edntomas: </p> <ul> <li>EACCES </li> <li>Unauthorized access.</li> </ul> <p>Identificaci\u00f3n: Error lanzado al intentar leer/escribir.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-008</code> \u2013 File Not Found</p> <p>Descripci\u00f3n: El archivo o ruta especificada no existe.</p> <p>S\u00edntomas:</p> <ul> <li>ENOENT</li> <li>FileNotFoundException.</li> </ul> <p>Identificaci\u00f3n: Ruta inv\u00e1lida, typo o eliminaci\u00f3n previa.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-009</code> \u2013 Archivo Corrupto o Inv\u00e1lido</p> <p>Descripci\u00f3n: El archivo est\u00e1 da\u00f1ado o no puede interpretarse correctamente.</p> <p>S\u00edntomas: </p> <ul> <li>Checksum mismatch </li> <li>Invalid file header</li> </ul> <p>Identificaci\u00f3n: Validaci\u00f3n de checksum, errores de parsing.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-010</code> \u2013 SQL Syntax Error</p> <p>Descripci\u00f3n: Error en la sintaxis de una consulta SQL.</p> <p>S\u00edntomas: </p> <ul> <li>Syntax error</li> <li>Unexpected token.</li> </ul> <p>Identificaci\u00f3n: Validar SQL emitido.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-011</code> \u2013 Constraint Violation</p> <p>Descripci\u00f3n: Violaci\u00f3n de restricciones de integridad (clave \u00fanica, for\u00e1nea, etc.).</p> <p>S\u00edntomas: </p> <ul> <li>Duplicate key</li> <li>Foreign key violation.</li> </ul> <p>Identificaci\u00f3n: C\u00f3digo de error SQL como 23505.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-012</code> \u2013 Connection Pool Exhausted</p> <p>Descripci\u00f3n: No hay conexiones disponibles en el pool de base de datos.</p> <p>S\u00edntomas: </p> <ul> <li>Timeout waiting for connection </li> <li>Max pool size reached.</li> </ul> <p>Identificaci\u00f3n: Monitoreo de pool.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-013</code> \u2013 Deadlock Detected</p> <p>Descripci\u00f3n: Dos transacciones compiten por los mismos recursos generando un ciclo de espera.</p> <p>S\u00edntomas: </p> <ul> <li>Deadlock found when trying to get lock.</li> </ul> <p>Identificaci\u00f3n: Logs del motor SQL, traza de locks.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-014</code> \u2013 Authentication Failed</p> <p>Descripci\u00f3n: Credenciales incorrectas o faltantes al intentar conectarse.</p> <p>S\u00edntomas: </p> <ul> <li>Access denied </li> <li>Authentication failed.</li> </ul> <p>Identificaci\u00f3n: Verificaci\u00f3n de variables/env config.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-015</code> \u2013 Key Not Found</p> <p>Descripci\u00f3n: Se intenta leer un documento o registro que no existe.</p> <p>S\u00edntomas: </p> <ul> <li>404 not found</li> <li>null result.</li> </ul> <p>Identificaci\u00f3n: Verificaci\u00f3n manual de la clave o ID.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-016</code> \u2013 Cluster Unavailable</p> <p>Descripci\u00f3n: El cl\u00faster de base de datos NoSQL no est\u00e1 disponible o no hay nodo maestro activo.</p> <p>S\u00edntomas: </p> <ul> <li>No reachable nodes </li> <li>Cluster is down.</li> </ul> <p>Identificaci\u00f3n: Monitor del cl\u00faster, nodos offline.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-016</code> \u2013 Timeout en Operaci\u00f3n</p> <p>Descripci\u00f3n: Tiempo de espera excedido durante una operaci\u00f3n (lectura/escritura).</p> <p>S\u00edntomas: </p> <ul> <li>QueryTimeoutException</li> <li>Read timed out.</li> </ul> <p>Identificaci\u00f3n: Latencias altas, problemas de red o bloqueo de disco.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-017</code> \u2013 Formato de Documento Inv\u00e1lido</p> <p>Descripci\u00f3n: Documento no cumple con el esquema esperado (en bases con validaciones).</p> <p>S\u00edntomas: </p> <ul> <li>Validation failed</li> <li>Schema violation.</li> </ul> <p>Identificaci\u00f3n: Error estructural al insertar/updatear.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-018</code> \u2013 Exceeded Document Size Limit</p> <p>Descripci\u00f3n: Se excede el tama\u00f1o m\u00e1ximo permitido para un documento.</p> <p>S\u00edntomas: </p> <ul> <li>Document too large </li> <li>BSONObj size.</li> </ul> <p>Identificaci\u00f3n: Configuraci\u00f3n del motor (e.g. MongoDB limita a 16MB).</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-019</code> \u2013 Broker Not Available</p> <p>Descripci\u00f3n: El broker de mensajes est\u00e1 fuera de l\u00ednea o no responde.</p> <p>S\u00edntomas: </p> <ul> <li>Kafka broker unavailable </li> <li>RabbitMQ timeout.</li> </ul> <p>Identificaci\u00f3n: Logs del broker, verificaci\u00f3n de conectividad.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-020</code> \u2013 Message Too Large</p> <p>Descripci\u00f3n: El mensaje enviado supera el tama\u00f1o m\u00e1ximo permitido.</p> <p>S\u00edntomas: </p> <ul> <li>MessageSizeExceededException.</li> </ul> <p>Identificaci\u00f3n: Revisar configuraci\u00f3n del t\u00f3pico/cola.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-021</code> \u2013 Offset Out of Range</p> <p>Descripci\u00f3n: El consumidor intenta leer desde un offset inexistente.</p> <p>S\u00edntomas: </p> <ul> <li>OffsetOutOfRangeException.</li> </ul> <p>Identificaci\u00f3n: Monitor de consumidor.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-022</code> \u2013 Connection Timeout to Queue</p> <p>Descripci\u00f3n: No se pudo establecer conexi\u00f3n con la cola.</p> <p>S\u00edntomas: </p> <ul> <li>Connection refused</li> <li>Timeout.</li> </ul> <p>Identificaci\u00f3n: Revisi\u00f3n de red, TLS, autenticaci\u00f3n.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-023</code> \u2013 Unauthorized (401)</p> <p>Descripci\u00f3n: Autenticaci\u00f3n fallida al consumir un servicio externo.</p> <p>S\u00edntomas: </p> <ul> <li>HTTP 401</li> <li>Token inv\u00e1lido o expirado.</li> </ul> <p>Identificaci\u00f3n: Verificaci\u00f3n de encabezados o expiraci\u00f3n.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-024</code> \u2013 Forbidden (403)</p> <p>Descripci\u00f3n: Acceso denegado incluso con autenticaci\u00f3n v\u00e1lida.</p> <p>S\u00edntomas: </p> <ul> <li>HTTP 403</li> <li>Falta de permisos.</li> </ul> <p>Identificaci\u00f3n: Verificar scope o permisos del token.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-025</code> \u2013 Service Unavailable (503)</p> <p>Descripci\u00f3n: Servicio remoto no est\u00e1 disponible temporalmente.</p> <p>S\u00edntomas: </p> <ul> <li>HTTP 503 </li> <li>Service unavailable.</li> </ul> <p>Identificaci\u00f3n: Consultar estado del proveedor externo.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-026</code> \u2013 Malformed Response</p> <p>Descripci\u00f3n: El servicio responde con un body mal formado.</p> <p>S\u00edntomas: </p> <ul> <li>Unexpected token</li> <li>JSON parse error.</li> </ul> <p>Identificaci\u00f3n: Logs del cliente, traza de parsing.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-027</code> \u2013 Too Many Open Files</p> <p>Descripci\u00f3n: El proceso ha alcanzado el l\u00edmite de archivos abiertos.</p> <p>S\u00edntomas: </p> <ul> <li>EMFILE</li> <li>Too many open files.</li> </ul> <p>Identificaci\u00f3n: Verificaci\u00f3n de ulimit, conteo de FDs abiertos.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-028</code> \u2013 Out of Memory (OOM)</p> <p>Descripci\u00f3n: El proceso fue terminado o fall\u00f3 por falta de memoria.</p> <p>S\u00edntomas: </p> <ul> <li>Killed</li> <li>OOM killer</li> <li>Cannot allocate memory.</li> </ul> <p>Identificaci\u00f3n: Logs del kernel, m\u00e9tricas de RAM.</p> <p>Origen: Infraestructura.</p> <p><code>ERR-INF-029</code> \u2013 Insufficient Privileges</p> <p>Descripci\u00f3n: El proceso intent\u00f3 realizar una acci\u00f3n sin privilegios suficientes.</p> <p>S\u00edntomas: </p> <ul> <li>Operation not permitted</li> <li>Permission denied.</li> </ul> <p>Identificaci\u00f3n: Verificaci\u00f3n de usuario/rol del proceso.</p> <p>Origen: Infraestructura.</p> <p>\u00bfC\u00f3mo identificar errores no contemplados aqu\u00ed? Si enfrentas un error no listado, verifica estas condiciones para determinar si pertenece a infraestructura:</p> <ul> <li>\u00bfDepende de un sistema externo o recurso t\u00e9cnico?</li> <li>\u00bfSe manifiesta sin l\u00f3gica de negocio involucrada?</li> <li>\u00bfSe relaciona con conectividad, almacenamiento, ejecuci\u00f3n o entorno?</li> <li>\u00bfRequiere intervenci\u00f3n operativa, no l\u00f3gica, para solucionarse?</li> </ul> <p>Si la respuesta es s\u00ed a al menos dos, es un error de infraestructura.</p>"},{"location":"desarrollo/error-handler/clasificacion-errores/#errores-de-dominio","title":"Errores de dominio","text":"<p><code>ERR-DOM-001</code> \u2013 Violaci\u00f3n de Invariante de Entidad</p> <p>Descripci\u00f3n: Una entidad del dominio est\u00e1 en un estado inv\u00e1lido porque una de sus invariantes fue violada. Las invariantes son reglas que siempre deben cumplirse para que la entidad sea v\u00e1lida (por ejemplo, un pedido debe tener al menos un \u00edtem).</p> <p>Ejemplos: Un objeto CuentaBancaria permite saldo negativo, aunque se defini\u00f3 como no sobregirable.</p> <p>S\u00edntomas:</p> <ul> <li>El objeto parece v\u00e1lido, pero genera inconsistencias al usarse.</li> <li>Pruebas de unidad fallan por valores que deber\u00edan ser inv\u00e1lidos.</li> </ul> <p>C\u00f3mo identificarlo: Revisa reglas como \u201cun cliente debe tener al menos un contrato activo\u201d, o \u201cla suma de partes debe ser igual al total\u201d. Si puedes construir un objeto que viole esto, hay una falla.</p> <p>Origen: Dominio.</p> <p><code>ERR-DOM-002</code> \u2013 Regla de Negocio Violada Descripci\u00f3n: Una operaci\u00f3n del dominio ejecuta una acci\u00f3n que no est\u00e1 permitida por las reglas del negocio, incluso si es t\u00e9cnicamente v\u00e1lida. No es que los datos sean inv\u00e1lidos, sino que la transici\u00f3n de estado no est\u00e1 permitida.</p> <p>Ejemplo: Intentar aprobar una orden que ya fue cancelada.</p> <p>S\u00edntomas: - Cambios de estado inconsistentes. - Conflictos entre estados de distintos objetos relacionados.</p> <p>C\u00f3mo identificarlo: Si puedes ejecutar una acci\u00f3n que tu equipo de negocio o cliente dir\u00eda \u201ceso no se deber\u00eda poder hacer\u201d, est\u00e1s frente a esta clase de error.</p> <p>Origen: Dominio.</p> <p><code>ERR-DOM-003</code> \u2013 Valor de Objeto Inv\u00e1lido</p> <p>Descripci\u00f3n: Un objeto de valor contiene un dato que no respeta su contrato sem\u00e1ntico. Los objetos de valor deben garantizar su validez desde el momento en que son creados.</p> <p>Ejemplo: Un Email con formato inv\u00e1lido, o una Moneda con c\u00f3digo no estandarizado.</p> <p>S\u00edntomas:</p> <ul> <li>Fallos en operaciones que dependen del valor (e.g., env\u00edo de correo).</li> <li>Problemas de interoperabilidad.</li> </ul> <p>C\u00f3mo identificarlo: Revisa si puedes construir un objeto de valor con informaci\u00f3n incorrecta sin que lance error. Si es as\u00ed, est\u00e1 mal dise\u00f1ado.</p> <p>Origen: Dominio.</p> <p><code>ERR-DOM-004</code> \u2013 Estado Transitorio o Incompleto</p> <p>Descripci\u00f3n: El dominio permite mantener objetos en estados intermedios que no deber\u00edan ser accesibles o que requieren pasos adicionales para ser v\u00e1lidos.</p> <p>Ejemplo: Un ProcesoDeRegistro que puede persistirse aunque falte la verificaci\u00f3n de correo.</p> <p>S\u00edntomas:</p> <ul> <li>Objetos con campos nulos que deber\u00edan ser obligatorios.</li> <li>Acciones disponibles que no deber\u00edan serlo hasta completar un flujo.</li> </ul> <p>C\u00f3mo identificarlo: Busca estructuras de datos parcialmente construidas o estados de transici\u00f3n no controlados.</p> <p>Origen: Dominio.</p> <p><code>ERR-DOM-005</code> \u2013 Conflicto de Identidad de Entidad</p> <p>Descripci\u00f3n: Se crea o utiliza una entidad con un identificador que entra en conflicto con otra entidad existente, provocando ambig\u00fcedad en el dominio.</p> <p>Ejemplo: Dos objetos Usuario con el mismo correo o ID en un sistema donde esto no es permitido.</p> <p>S\u00edntomas:</p> <ul> <li>Registros duplicados.</li> <li>Acciones en una entidad afectan accidentalmente otra.</li> </ul> <p>C\u00f3mo identificarlo: El dominio debe garantizar unicidad donde se espera. Si eso falla, es un problema de identidad.</p> <p>Origen: Dominio.</p> <p><code>ERR-DOM-006</code> \u2013 Agregados Mal Delimitados</p> <p>Descripci\u00f3n: Se permite manipular directamente entidades internas de un agregado desde fuera, violando el principio de consistencia transaccional.</p> <p>Ejemplo: Modificar un Producto dentro de un Pedido sin pasar por el agregado Pedido.</p> <p>S\u00edntomas:</p> <ul> <li>Modificaciones inconsistentes.</li> <li>Estados imposibles de alcanzar desde la ra\u00edz del agregado.</li> </ul> <p>C\u00f3mo identificarlo: Si puedes romper las reglas del modelo sin pasar por el agregado ra\u00edz, est\u00e1s frente a este error.</p> <p>Origen: Dominio.</p> <p><code>ERR-DOM-007</code> \u2013 Referencia Rota o No Existente</p> <p>Descripci\u00f3n: Una entidad o valor referencia otra entidad del dominio que no existe o no es v\u00e1lida en ese contexto.</p> <p>Ejemplo: Asignar un Cliente que ya fue eliminado a una nueva Orden.</p> <p>S\u00edntomas:</p> <ul> <li>Excepciones al cargar datos.</li> <li>Inconsistencias en el flujo de negocio.</li> </ul> <p>C\u00f3mo identificarlo: Rastrea relaciones internas y aseg\u00farate de que todas las referencias sean v\u00e1lidas y coherentes con las reglas del dominio.</p> <p>Origen: Dominio.</p> <p><code>ERR-DOM-008</code> \u2013 Uso de Datos Externos que Rompen el Modelo</p> <p>Descripci\u00f3n: Datos provenientes de sistemas externos son utilizados sin pasar por las validaciones o normalizaciones del dominio, rompiendo su coherencia interna.</p> <p>Ejemplo: Inyectar un JSON de un sistema externo como entidad del dominio sin validarlo.</p> <p>S\u00edntomas:</p> <ul> <li>Inconsistencias que solo ocurren con datos externos.</li> <li>Valores fuera de rangos esperados.</li> </ul> <p>C\u00f3mo identificarlo: Verifica si los datos externos pueden construirse en entidades sin validaci\u00f3n expl\u00edcita.</p> <p>Origen: Dominio.</p> <p>\u00bfC\u00f3mo identificar errores de dominio que no est\u00e1n listados? Para determinar si un error pertenece a la capa de dominio, eval\u00faa:</p> <ul> <li>\u00bfEl error representa una violaci\u00f3n de una regla del negocio?</li> <li>\u00bfLa estructura del objeto o su uso rompe las invariantes del modelo?</li> <li>\u00bfEl sistema t\u00e9cnico funciona bien, pero el modelo l\u00f3gico se comporta de forma incorrecta?</li> <li>\u00bfUn experto del negocio encontrar\u00eda inaceptable el estado resultante?</li> </ul> <p>Si respondes s\u00ed a una o m\u00e1s, el error pertenece claramente a la capa de dominio.</p> <p>--</p>"},{"location":"desarrollo/error-handler/glosario/","title":"Glosario","text":""},{"location":"desarrollo/error-handler/introduccion/","title":"Est\u00e1ndar de manejo de errores NNXT - v1.0","text":"<p>El manejo de errores, o error handling, es una pr\u00e1ctica fundamental en el dise\u00f1o e implementaci\u00f3n de sistemas de software robustos, seguros y mantenibles. Consiste en el conjunto de t\u00e9cnicas, estructuras, patrones y convenciones que permiten a una aplicaci\u00f3n detectar, capturar, interpretar y responder de manera controlada a las situaciones an\u00f3malas o fallas que se presentan durante su ejecuci\u00f3n. Estas situaciones pueden ser tan diversas como un valor de entrada inv\u00e1lido, un fallo de red, un error en la l\u00f3gica de negocio o una excepci\u00f3n no anticipada en una dependencia externa.</p> <p>En esencia, un error handler no se limita a atrapar errores, sino que establece un marco estructurado para su clasificaci\u00f3n, propagaci\u00f3n, registro, monitoreo, sanitizaci\u00f3n y comunicaci\u00f3n hacia otras capas del sistema o hacia el consumidor final. Su implementaci\u00f3n adecuada es cr\u00edtica en entornos donde se busca garantizar alta disponibilidad, consistencia operativa, resiliencia, y observabilidad del sistema.</p>"},{"location":"desarrollo/error-handler/introduccion/#proposito-del-error-handler","title":"Prop\u00f3sito del Error Handler","text":"<p>La implementaci\u00f3n del est\u00e1ndar de manejo de errores NNXT tiene como objetivos principales:</p> <ul> <li>Predictibilidad: Evitar comportamientos err\u00e1ticos ante fallos.</li> <li>Seguridad: Prevenir la exposici\u00f3n de detalles internos o sensibles al usuario o atacante.</li> <li>Trazabilidad: Permitir la reconstrucci\u00f3n del contexto de un error a trav\u00e9s de logs y m\u00e9tricas.</li> <li>Aislamiento de capas: Evitar que detalles de bajo nivel (como una excepci\u00f3n de base de datos) se filtren hacia niveles m\u00e1s altos (como la l\u00f3gica de negocio o la interfaz de usuario).</li> <li>Facilidad de mantenimiento y debugging: Proveer informaci\u00f3n estructurada para resolver incidencias de forma eficiente.</li> <li>Mejora en la experiencia del usuario: Informar fallos de manera clara, coherente y \u00fatil.</li> </ul>"},{"location":"desarrollo/error-handler/introduccion/#capas-de-implementacion-del-manejo-de-errores","title":"Capas de implementaci\u00f3n del manejo de errores","text":"<p>El manejo de errores debe implementarse en m\u00faltiples niveles de la arquitectura de software, cada uno con responsabilidades y alcance bien definidos:</p> <p>Capa de infraestructura: Se encarga de capturar errores provenientes de servicios externos, bases de datos, sistemas de archivos, redes o cualquier otro recurso t\u00e9cnico. En esta capa es fundamental encapsular errores t\u00e9cnicos para que no afecten el dominio de negocio directamente.</p> <p>Capa de dominio: Aqu\u00ed se expresan errores propios del modelo de negocio, como reglas violadas o estados no v\u00e1lidos. Estos errores no est\u00e1n relacionados con fallas t\u00e9cnicas, sino con inconsistencias en el comportamiento esperado del sistema.</p> <p>Capa de aplicaci\u00f3n / servicios: Se encarga de orquestar la l\u00f3gica de negocio y de capturar, mapear o traducir errores provenientes del dominio o la infraestructura hacia respuestas coherentes que puedan ser comprendidas por otras partes del sistema.</p> <p>Capa de presentaci\u00f3n o interfaz: Es la responsable de comunicar el error de manera estructurada, consistente y segura a los consumidores del sistema (ya sean humanos o m\u00e1quinas, como clientes HTTP, m\u00f3viles o aplicaciones externas).</p> <p>Capa de observabilidad (logging, m\u00e9tricas, trazas): Aunque transversal, es esencial para registrar los errores con el contexto necesario para an\u00e1lisis posterior, correlaci\u00f3n de eventos, diagn\u00f3stico de causas ra\u00edz y alertas operativas.</p>"},{"location":"desarrollo/error-handler/introduccion/#componentes-esenciales-del-estandar-de-manejo-de-errores","title":"Componentes esenciales del est\u00e1ndar de manejo de errores","text":"<p>La implementacion del Est\u00e1ndar de manejo de errores NNXT incluye los siguientes componentes:</p>"},{"location":"desarrollo/error-handler/introduccion/#1-modelo-estructurado-de-error","title":"1. Modelo estructurado de error","text":"<p>Se establece un formato com\u00fan para representar errores. Esto incluye campos como c\u00f3digo de error, mensaje, nivel de severidad, tipo de error, detalles adicionales, marca de tiempo y un identificador de trazabilidad (<code>preferentemente UUID</code>). M\u00e1s adelante profundizaremos en la estructura de las respuestas.</p> <p>Por ejemplo, una API debe devolver un error estructurado como:</p> <pre><code>{\n  \"error_code\": \"USER_NOT_FOUND\",\n  \"message\": \"No se encontr\u00f3 un usuario con el identificador proporcionado\",\n  \"status\": 404,\n  \"details\": [\n    { \"field\": \"userId\", \"issue\": \"Valor inv\u00e1lido o inexistente\" }\n  ],\n  \"trace_id\": \"req-abc123-def456\"\n}\n</code></pre> <p>El modelo estandar facilita el consumo autom\u00e1tico de errores por otras aplicaciones, as\u00ed como la generaci\u00f3n de m\u00e9tricas y an\u00e1lisis por parte de los equipos de desarrollo y operaciones.</p>"},{"location":"desarrollo/error-handler/introduccion/#2-clasificacion-semantica-de-errores","title":"2. Clasificaci\u00f3n sem\u00e1ntica de errores","text":"<p>Es esencial clasificar los errores en categor\u00edas bien definidas para que el sistema pueda responder adecuadamente seg\u00fan el contexto. Algunas categor\u00edas comunes incluyen:</p> <ul> <li>Errores de validaci\u00f3n: Ocurren cuando los datos de entrada no cumplen los criterios establecidos (ej. formato de correo electr\u00f3nico inv\u00e1lido).</li> <li>Errores de dominio: Representan violaciones de reglas de negocio (ej. intentar realizar una transferencia con fondos insuficientes).</li> <li>Errores t\u00e9cnicos: Derivan de fallos en dependencias externas (como servicios de terceros, bases de datos, colas de mensajer\u00eda).</li> <li>Errores inesperados: o de sistema: Son fallos imprevistos que indican errores de implementaci\u00f3n o condiciones no controladas (como excepciones no capturadas o corrupci\u00f3n de estado).</li> </ul> <p>Esta clasificaci\u00f3n permite definir pol\u00edticas diferenciadas para el tratamiento, logueo, reintento, notificaci\u00f3n o escalado.</p>"},{"location":"desarrollo/error-handler/introduccion/#3-mecanismos-de-captura-y-propagacion-controlada","title":"3. Mecanismos de captura y propagaci\u00f3n controlada","text":"<p>El <code>Est\u00e1ndar de manejo de errores NNXT</code> define c\u00f3mo y d\u00f3nde capturar errores, y c\u00f3mo deben propagarse entre capas. Por ejemplo:</p> <ul> <li>Un error t\u00e9cnico de infraestructura se encapsula en una excepci\u00f3n m\u00e1s abstracta antes de llegar a la capa de aplicaci\u00f3n.</li> <li>Un error de dominio puede propagarse directamente para ser manejado por el servicio que lo invoca.</li> <li>Un error inesperado se captura globalmente y se responde de forma gen\u00e9rica al consumidor para evitar fuga de informaci\u00f3n interna.</li> </ul> <p>Esto garantiza que los errores no se escapen de su contexto ni revelen detalles innecesarios.</p>"},{"location":"desarrollo/error-handler/introduccion/#4-manejo-centralizado-y-punto-unico-de-captura","title":"4. Manejo centralizado y punto \u00fanico de captura","text":"<p>Todo error que no sea manejado expl\u00edcitamente debe ser capturado por un mecanismo centralizado. Esto puede ser un middleware, interceptor, filtro o decorador, dependiendo del entorno y lenguaje utilizado. Este componente central debe encargarse de:</p> <ul> <li>Convertir errores en una respuesta adecuada al consumidor.</li> <li>Registrar el error con todo el contexto disponible.</li> <li>Asociar el error a un identificador de trazabilidad.</li> <li>Notificar, si corresponde, a sistemas de monitoreo o alertas.</li> </ul> <p>Este enfoque reduce la duplicaci\u00f3n de l\u00f3gica de manejo y garantiza consistencia en la experiencia de error.</p>"},{"location":"desarrollo/error-handler/introduccion/#5-estrategias-de-resiliencia-y-recuperacion","title":"5. Estrategias de resiliencia y recuperaci\u00f3n","text":"<p>El <code>Est\u00e1ndar de manejo de errores NNXT</code> tambien contempla c\u00f3mo responder a errores transitorios (por ejemplo, un timeout de red), definiendo pol\u00edticas como:</p> <ul> <li>Reintentos autom\u00e1ticos con backoff exponencial.</li> <li>Circuit breakers para evitar sobrecarga.</li> <li>Fallbacks definidos para continuar con funcionalidad limitada.</li> </ul> <p>No todos los errores deben ser motivo de fallo total. Un dise\u00f1o resiliente considera que algunos errores pueden ser tratados temporal o parcialmente, preservando la continuidad del sistema.</p>"},{"location":"desarrollo/error-handler/introduccion/#6-seguridad-y-sanitizacion-de-errores","title":"6. Seguridad y sanitizaci\u00f3n de errores","text":"<p>Uno de los pilares del manejo de errores es proteger la integridad y seguridad del sistema. Los mensajes de error nunca deben incluir:</p> <ul> <li>Detalles del stack trace.</li> <li>Informaci\u00f3n de configuraci\u00f3n interna.</li> <li>Mensajes del sistema operativo o del lenguaje.</li> <li>Cadenas de conexi\u00f3n o rutas del sistema de archivos.</li> </ul> <p>Toda respuesta expuesta al usuario o a consumidores externos debe ser cuidadosamente sanitizada y controlada para evitar vulnerabilidades por fuga de informaci\u00f3n.</p>"},{"location":"desarrollo/error-handler/introduccion/#7-integracion-con-monitoreo-y-trazabilidad","title":"7. Integraci\u00f3n con monitoreo y trazabilidad","text":"<p>Finalmente, el error handler se integra con las herramientas de observabilidad de la organizaci\u00f3n. Esto incluye:</p> <ul> <li>Registros estructurados con nivel de severidad (WARN, ERROR, CRITICAL).</li> <li>Asociar errores a un trace_id para correlaci\u00f3n entre servicios.</li> <li>Exportar m\u00e9tricas de error (tasa, frecuencia, origen).</li> <li>Integrarse con dashboards, alertas o sistemas de incident management.</li> </ul> <p>Sin una buena observabilidad, incluso el mejor manejo de errores se vuelve in\u00fatil ante un fallo en producci\u00f3n.</p>"},{"location":"desarrollo/error-handler/introduccion/#conclusion","title":"Conclusi\u00f3n","text":"<p>Implementar el <code>Est\u00e1ndar de manejo de errores NNXT</code> de manejo de errores no es una tarea trivial ni un detalle accesorio: ser\u00e1 una parte esencial de cualquier arquitectura de software moderna. El est\u00e1ndar considera el flujo completo de una falla \u2014desde su origen t\u00e9cnico o de negocio, hasta su manifestaci\u00f3n ante el usuario o sistema consumidor\u2014 pasando por mecanismos de clasificaci\u00f3n, registro, trazabilidad, resiliencia y seguridad. Hacerlo correctamente no s\u00f3lo mejora la calidad y estabilidad del software, sino que tambi\u00e9n reduce el costo operativo, facilita el mantenimiento y mejora la experiencia general del sistema frente a condiciones adversas. La inversi\u00f3n en la implementacion del <code>Est\u00e1ndar de manejo de errores NNXT</code> es, en definitiva, una inversi\u00f3n directa en la confiabilidad del producto.</p>"},{"location":"desarrollo/error-handler/modelo-estandar/","title":"Modelo estandar","text":"<p>El modelo estructurado de error, o modelo est\u00e1ndar, es la representaci\u00f3n formal y consistente de un error en una aplicaci\u00f3n. Su objetivo principal es proporcionar una forma coherente de describir, transportar, almacenar y visualizar errores en todos los niveles del sistema. Este modelo act\u00faa como un lenguaje com\u00fan entre todas las capas \u2014infraestructura, dominio, aplicaci\u00f3n, presentaci\u00f3n y observabilidad\u2014 y entre todos los componentes involucrados en el ciclo de vida del software: desarrolladores, consumidores, operadores, testers, monitoreo automatizado y m\u00e1s.</p> <p>Un modelo est\u00e1ndar de error no s\u00f3lo encapsula el mensaje de fallo, sino que estructura la informaci\u00f3n de manera que sea entendible, trazable, segura y \u00fatil para la toma de decisiones t\u00e9cnicas y de negocio. Su implementaci\u00f3n adecuada permite que los errores sean:</p> <ul> <li>Clasificados autom\u00e1ticamente</li> <li>Correlacionados entre servicios distribuidos</li> <li>Interpretados por humanos y m\u00e1quinas</li> <li>Visualizados en dashboards</li> <li>Auditablemente documentados</li> </ul>"},{"location":"desarrollo/error-handler/modelo-estandar/#campos-del-modelo-estandar","title":"Campos del modelo estandar","text":"<p>A continuaci\u00f3n se define la estructura base del modelo est\u00e1ndar, junto con la justificaci\u00f3n, utilidad y aplicaci\u00f3n de cada campo:</p> Campo Descripci\u00f3n Utilidad y Aplicaci\u00f3n <code>timestamp</code> Fecha y hora en que ocurri\u00f3 el error (formato UTC ISO 8601) Permite auditor\u00eda temporal, correlaci\u00f3n de eventos y an\u00e1lisis forense. Fundamental para trazabilidad y monitoreo. <code>error_code</code> Identificador \u00fanico y legible del tipo de error (ej. <code>USER_NOT_FOUND</code>, <code>DB_TIMEOUT</code>, <code>VALIDATION_ERROR</code>) Facilita identificaci\u00f3n r\u00e1pida, clasificaci\u00f3n automatizada y l\u00f3gica condicional por tipo de error. <code>message</code> Descripci\u00f3n amigable del error, apta para mostrar a usuarios o desarrolladores Es la interfaz humana del error. Puede internacionalizarse o versionarse para m\u00faltiples consumidores. <code>status</code> C\u00f3digo num\u00e9rico del error (HTTP status code, c\u00f3digo interno o est\u00e1ndar empresarial) Proporciona sem\u00e1ntica formal sobre el tipo de error. \u00datil en APIs HTTP y respuestas gen\u00e9ricas. <code>severity</code> Nivel de severidad (<code>INFO</code>, <code>WARNING</code>, <code>ERROR</code>, <code>CRITICAL</code>) Permite filtros operativos, reglas de alerta, prioridades de resoluci\u00f3n. <code>trace_id</code> Identificador \u00fanico de trazabilidad entre servicios/disparadores Clave para seguimiento en sistemas distribuidos y observabilidad avanzada (tracing). <code>context</code> Datos adicionales del entorno donde ocurri\u00f3 el error (ej. nombre del servicio, nombre del usuario, entorno) Permite enriquecer el error para entender su causa ra\u00edz sin comprometer seguridad. <code>stack_trace</code> Traza de la pila de ejecuci\u00f3n (internamente disponible pero nunca expuesta al cliente externo) \u00datil para debugging profundo, solo accesible por logs seguros. <code>details</code> Lista de detalles estructurados, \u00fatil en errores de validaci\u00f3n o errores compuestos Mejora la experiencia del desarrollador al mostrar exactamente qu\u00e9 fall\u00f3 y por qu\u00e9. <code>origin_layer</code> Capa donde se origin\u00f3 el error (<code>infrastructure</code>, <code>domain</code>, <code>application</code>, <code>presentation</code>) Ayuda a identificar responsabilidad y clasificar errores para diagn\u00f3stico. <code>retryable</code> Indica si el error es transitorio y puede reintentarse (<code>true</code> / <code>false</code>) Fundamental para flujos asincr\u00f3nicos, resiliencia y sistemas con reintentos autom\u00e1ticos. <code>category</code> Clasificaci\u00f3n sem\u00e1ntica (<code>validation</code>, <code>business</code>, <code>technical</code>, <code>unknown</code>) Permite an\u00e1lisis agregados y reglas espec\u00edficas por tipo de error."},{"location":"desarrollo/error-handler/modelo-estandar/#aplicacion-del-modelo-por-capas","title":"Aplicacion del modelo por capas","text":""},{"location":"desarrollo/error-handler/modelo-estandar/#capa-de-infraestructura","title":"Capa de infraestructura","text":"<p>La capa de infraestructura representa la base t\u00e9cnica que sustenta el funcionamiento de una aplicaci\u00f3n: conexiones a bases de datos, servicios externos, colas de mensajes, sistemas de archivos, redes, almacenamiento, balanceadores, proveedores cloud, contenedores, entre otros. Dada su naturaleza, esta capa est\u00e1 particularmente expuesta a fallos operacionales, dependencias externas, problemas de disponibilidad o configuraci\u00f3n, y eventos de red.</p> <p>Implementar un modelo estructurado de error en esta capa no es solo deseable, es cr\u00edtico. Una falla en infraestructura puede desencadenar errores en cascada si no se detecta, clasifica y trata correctamente. Este cap\u00edtulo detalla c\u00f3mo aplicar el modelo est\u00e1ndar de error en este contexto, qu\u00e9 tipo de errores son comunes, c\u00f3mo manejarlos y c\u00f3mo integrarlos adecuadamente al sistema general de errores.</p>"},{"location":"desarrollo/error-handler/modelo-estandar/#1-tipos-de-errores-comunes-en-la-capa-de-infraestructura","title":"1. Tipos de errores comunes en la capa de infraestructura","text":"<p>a) Errores de red</p> <ul> <li>Timeout al conectarse a un servicio externo</li> <li>DNS mal resuelto</li> <li>Desconexi\u00f3n durante la transmisi\u00f3n de datos</li> </ul> <p>b) Errores de base de datos</p> <ul> <li>Conexi\u00f3n rechazada</li> <li>Query malformado</li> <li>Constraint violations</li> <li>Timeout o locks</li> </ul> <p>c) Errores en almacenamiento</p> <ul> <li>Permisos insuficientes en disco</li> <li>Espacio insuficiente</li> <li>Falla al leer/escribir archivo</li> <li>Path no encontrado</li> </ul> <p>d) Errores de servicios externos</p> <ul> <li>Respuestas mal formadas (mal JSON/XML)</li> <li>Errores de autenticaci\u00f3n (401, 403)</li> <li>Errores de disponibilidad (503, timeout)</li> <li>Cambios en APIs de terceros</li> </ul> <p>e) Errores de configuraci\u00f3n</p> <ul> <li>Variables de entorno faltantes o inv\u00e1lidas</li> <li>Certificados expirados</li> <li>Recursos mal definidos</li> </ul> <p>f) Errores del sistema operativo</p> <ul> <li>Procesos que no pueden iniciarse</li> <li>Problemas de permisos</li> <li>L\u00edmites de sistema alcanzados (open files, memory)</li> </ul> <p>g) Errores en colas o brokers de mensajes</p> <ul> <li>Fallas al publicar/consumir mensajes</li> <li>Problemas de conectividad con RabbitMQ, Kafka, etc.</li> <li>Problemas de particionado o desincronizaci\u00f3n</li> </ul> <p>La infraestructura act\u00faa como proveedor de capacidades al dominio, la aplicaci\u00f3n o la presentaci\u00f3n. Por tanto, es esta capa la que detecta los errores t\u00e9cnicos y los convierte en errores con sem\u00e1ntica \u00fatil.</p> <p>Aqu\u00ed es donde se genera el error interno estructurado, que luego ser\u00e1 propagado, transformado o loggeado.</p> <p>Ejemplo:</p> <pre><code>{\n  \"timestamp\": \"2025-06-07T14:02:45Z\",\n  \"error_code\": \"DB_CONNECTION_TIMEOUT\",\n  \"message\": \"No se pudo conectar con la base de datos\",\n  \"status\": 500,\n  \"severity\": \"CRITICAL\",\n  \"trace_id\": \"abc-123-def-456\",\n  \"origin_layer\": \"infrastructure\",\n  \"retryable\": true,\n  \"category\": \"technical\"\n}\n</code></pre> <p>Importancia: Permite que errores t\u00e9cnicos no lleguen directamente a la capa de presentaci\u00f3n. La l\u00f3gica de negocio no necesita conocer detalles del proveedor (por ejemplo, que es PostgreSQL o MongoDB).</p>"},{"location":"desarrollo/error-handler/modelo-estandar/#capa-de-dominio","title":"Capa de dominio","text":"<p>Errores que representan reglas de negocio violadas.</p> <p>Ejemplo:</p> <pre><code>{\n  \"timestamp\": \"2025-06-07T14:05:10Z\",\n  \"error_code\": \"INSUFFICIENT_FUNDS\",\n  \"message\": \"El saldo disponible no es suficiente para completar la operaci\u00f3n\",\n  \"status\": 422,\n  \"severity\": \"ERROR\",\n  \"trace_id\": \"tx-9988-cc77\",\n  \"origin_layer\": \"domain\",\n  \"retryable\": false,\n  \"category\": \"business\"\n}\n</code></pre> <p>Importancia: No tiene sentido reintentar este error. Es decisi\u00f3n de negocio, no un fallo t\u00e9cnico.</p>"},{"location":"desarrollo/error-handler/modelo-estandar/#capa-de-aplicacion","title":"Capa de aplicacion","text":"<p>Errores en la orquestaci\u00f3n de casos de uso, errores derivados de invocaciones fallidas o l\u00f3gica de aplicaci\u00f3n.</p> <p>Ejemplo:</p> <pre><code>{\n  \"error_code\": \"EMAIL_DISPATCH_FAILED\",\n  \"message\": \"No fue posible enviar el correo de confirmaci\u00f3n\",\n  \"status\": 500,\n  \"origin_layer\": \"application\",\n  \"category\": \"technical\",\n  \"retryable\": true\n}\n</code></pre> <p>Importancia: Este error puede necesitar fallback o reintento por parte de un worker as\u00edncrono.</p>"},{"location":"desarrollo/error-handler/modelo-estandar/#capa-de-presentacion","title":"Capa de presentacion","text":"<p>Errores que afectan la forma en que se comunica el sistema con el usuario final.</p> <p>Ejemplo (en una API HTTP):</p> <pre><code>{\n  \"error_code\": \"MISSING_REQUIRED_FIELDS\",\n  \"message\": \"Algunos campos requeridos no fueron proporcionados\",\n  \"status\": 400,\n  \"origin_layer\": \"presentation\",\n  \"details\": [\n    { \"field\": \"email\", \"issue\": \"Campo obligatorio\" },\n    { \"field\": \"password\", \"issue\": \"Campo obligatorio\" }\n  ],\n  \"category\": \"validation\"\n}\n</code></pre> <p>Importancia: Permite mostrar mensajes \u00fatiles y reutilizar UI para mostrar errores de entrada.</p>"},{"location":"desarrollo/error-handler/modelo-estandar/#capa-de-observabilidad","title":"Capa de observabilidad","text":"<p>En esta capa, el modelo se transforma en logs, m\u00e9tricas o trazas.</p> <ul> <li>Se registran errores con su severity, trace_id y context</li> <li>Se generan m\u00e9tricas como error_count{category=\"technical\"} o validation_failure_rate</li> <li>Se integran con sistemas como Prometheus, Grafana, Elastic, Sentry, Datadog o similares</li> </ul>"},{"location":"desarrollo/error-handler/modelo-estandar/#contextos-de-aplicacion-del-modelo","title":"Contextos de aplicacion del modelo","text":""},{"location":"desarrollo/error-handler/modelo-estandar/#1-flujos-http","title":"1. Flujos HTTP","text":"<p>El modelo se serializa como respuesta JSON</p> <ul> <li>Se define una convenci\u00f3n para c\u00f3digos de estado (200, 400, 404, 422, 500)</li> <li>Se incluye el trace_id como header para seguimiento entre microservicios</li> </ul> <p>Ejemplo: Una API REST que devuelve un 422 Unprocessable Entity con errores de validaci\u00f3n detallados</p>"},{"location":"desarrollo/error-handler/modelo-estandar/#2-flujos-asincronos-colas-pubsub","title":"2. Flujos As\u00edncronos (colas, pub/sub)","text":"<p>El modelo se incluye en el payload del mensaje de error</p> <ul> <li>Se puede incluir el error en una cola de \u201cdead-letter\u201d para ser revisado</li> <li>El retryable: true se usa para decidir si reenviar el mensaje o escalar</li> </ul> <p>Ejemplo: Un worker de procesamiento de im\u00e1genes que falla y publica el error en una cola de fallos.</p>"},{"location":"desarrollo/error-handler/modelo-estandar/#3-conexiones-por-socket-websocket-tcp-etc","title":"3. Conexiones por Socket (WebSocket, TCP, etc.)","text":"<p>El error se env\u00eda como mensaje estructurado</p> <ul> <li>Puede incluir un campo correlation_id si el flujo tiene peticiones-respuestas as\u00edncronas</li> </ul> <p>Ejemplo:</p> <pre><code>{\n  \"type\": \"error\",\n  \"correlation_id\": \"msg-xyz123\",\n  \"payload\": {\n    \"error_code\": \"INVALID_COMMAND\",\n    \"message\": \"El comando recibido no est\u00e1 soportado por el servidor\",\n    \"status\": 400,\n    \"trace_id\": \"trace-abc999\"\n  }\n}\n</code></pre>"},{"location":"desarrollo/error-handler/modelo-estandar/#4-flujos-internos-y-batch","title":"4. Flujos internos y batch","text":"<p>Los errores se almacenan en logs o bases de datos internas</p> <ul> <li>El modelo se usa para construir reportes de ejecuci\u00f3n (por lote o por entrada)</li> <li>Puede usarse para crear dashboards de procesos fallidos</li> </ul>"},{"location":"desarrollo/error-handler/modelo-estandar/#5-sistemas-embebidos-o-cli","title":"5. Sistemas embebidos o CLI","text":"<p>El modelo puede reducirse a una estructura m\u00ednima (code, message, timestamp) El log debe incluir trace_id para diagn\u00f3sticos posteriores</p>"},{"location":"desarrollo/error-handler/modelo-estandar/#como-implementar-el-modelo-estandar","title":"C\u00f3mo Implementar el Modelo Est\u00e1ndar","text":"<p>Definir el esquema estructurado (JSON Schema, clase base, interfaz)</p> <p>Establecer nomenclatura y codificaci\u00f3n de errores (MODULE_ACTION_FAILURE)</p> <p>Agregar generaci\u00f3n autom\u00e1tica de trace_id y timestamp</p> <p>Instrumentar el sistema para generar errores estructurados en todas las capas</p> <p>Estandarizar los logs y exportadores de errores</p> <p>Educar a los equipos de desarrollo sobre c\u00f3mo construir y lanzar errores est\u00e1ndar</p> <p>Retroalimentaci\u00f3n y Complemento del Cap\u00edtulo Este cap\u00edtulo define con precisi\u00f3n la estructura y prop\u00f3sito del modelo est\u00e1ndar, cubriendo todos los campos esenciales y sus usos por capas y contextos. No obstante, para una implementaci\u00f3n completa en entornos reales, se recomienda extender este cap\u00edtulo incluyendo:</p> <p>Una matriz de mapeo de errores comunes por capa</p> <p>Pol\u00edticas para evitar duplicidad de errores y c\u00f3digos</p> <p>Reglas para construir mensajes localizables y seguros</p> <p>Pr\u00e1cticas de versionado del modelo en sistemas evolucionables</p> <p>Integraci\u00f3n con circuit breakers, rate limits y fallback policies</p> <p>Adem\u00e1s, se podr\u00eda incluir una herramienta de validaci\u00f3n (como JSON schema validator o linters internos) para asegurar que todos los errores lanzados cumplen con el formato estandarizado.</p>"},{"location":"proyectos/pandora-notificaciones/","title":"Proyecto de envio de notificaciones multicanal","text":""}]}